name: Build and deploy to EKS

on:
  push:
    paths:
      - 'Backend/**'
      - 'frontend/**'
    branches: [ release ]

jobs:
  common-steps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
  
      - name: Path Filter
        uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            backend:
              - 'Backend/**'
            frontend:
              - 'frontend/**'
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      



  api-deploy:
    needs: common-steps
    name: Build and Deploy API
    if: ${{ needs.common-steps.outputs.backend }} == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Debug Output
        run: |
          echo "Backend Filter Value: ${{ needs.common-steps.outputs.backend }}"
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0' # default is latest stable
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: intutivesoft
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd Backend/
          aws secretsmanager get-secret-value --region ap-south-1 --secret-id secret-dnb-prod --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\"\(.value)\"")|.[]' > $GITHUB_WORKSPACE/Backend/.env
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
          docker push -a $REGISTRY/$REPOSITORY

      - name: Update kube config
        run: aws eks update-kubeconfig --name intutive-prod --region ap-south-1 

      - name: Deploy image to Amazon EKS
        run: |
          kubectl apply -f eks/aws-auth.yaml
          kubectl apply -f eks/deployment.yaml --selector=app=dnb-api
          kubectl apply -f eks/service.yaml
          kubectl apply -f eks/issuer.yaml
          kubectl apply -f eks/ingress.yaml

  # ui-deploy:
  #   needs: common-steps
    
  #   name: Build and Deploy Frontend
  #   if: ${{ needs.common-steps.outputs.frontend }} == 'true'
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Debug Output
  #       run: |
  #         echo "Frontend Filter Value: ${{ needs.common-steps.outputs.frontend }}"
  #     - name: Checkout repo
  #       uses: actions/checkout@v3

  #     - name: Install kubectl
  #       uses: azure/setup-kubectl@v3
  #       with:
  #         version: 'v1.28.0' # default is latest stable
  #       id: install

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v2 # More information on this action can be found below in the 'AWS Credentials' section
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ap-south-1

  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1
  #       with:
  #         mask-password: 'true'

  #     - name: Build, tag, and push docker image to Amazon ECR
  #       env:
  #         REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         REPOSITORY: intutivesoft
  #         IMAGE_TAG: ${{ github.sha }}
  #       run: |
  #         cd frontend/
  #         aws secretsmanager get-secret-value --secret-id secret-dnb-ui-prod --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > $GITHUB_WORKSPACE/frontend/.env
  #         docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest-ui .
  #         docker push -a $REGISTRY/$REPOSITORY

  #     - name: Update kube config
  #       run: aws eks update-kubeconfig --name intutive-prod --region ap-south-1 

  #     - name: Deploy image to Amazon EKS
  #       run: |
  #         kubectl apply -f eks/aws-auth.yaml
  #         kubectl apply -f eks/deployment.yaml --selector=app=dnb-ui
  #         kubectl apply -f eks/service.yaml --selector=app=dnb-ui
  #         kubectl apply -f eks/issuer.yaml
  #         kubectl apply -f eks/ingress.yaml
